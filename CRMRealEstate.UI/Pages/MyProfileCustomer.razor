@page "/myProfileCustomerPage"
@inject UserFavouriteAnnouncements UserFavouriteAnnouncements;
@using CRMRealEstate.UI.Models
@inject HttpClient Http
@inject Blazored.LocalStorage.ILocalStorageService LocalStorage
@using Microsoft.AspNetCore.Components.Authorization
@using System.Text
@inject NavigationManager Navigation
@inject UserFavouriteAnnouncements userFavouriteAnnouncements;

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" crossorigin="anonymous" />

<AuthorizeView Roles="Customer">
    <Authorized>
        <MudStack Row Spacing="2" Class="mb-4 flex-wrap">
            <MudButton Variant="Variant.Outlined"
                       Color="Color.Primary"
                       Size="Size.Large"
                       Style="min-width: 280px;"
                       StartIcon="@Icons.Material.Filled.Favorite"
                       OnClick="GetFavouriteAnnouncementsAsync">
                Vezi anunțuri salvate la Favorite
            </MudButton>
        </MudStack>
    </Authorized>
</AuthorizeView>

<MudStack Row Spacing="2" Class="mb-4 flex-wrap">
    <MudButton Variant="Variant.Outlined"
               Color="Color.Primary"
               Size="Size.Large"
               Style="min-width: 280px;"
               StartIcon="@Icons.Material.Filled.UploadFile"
               OnClick="UploadDocuments">
        Încarcă Documente
    </MudButton>
</MudStack>


<AuthorizeView Roles="SalesAgent">
    <Authorized>
        <MudStack Row Spacing="2" Class="mb-4 flex-wrap">
            <MudButton Variant="Variant.Outlined" Color="Color.Primary" Size="Size.Large" Style="min-width: 280px;" OnClick="GoToRaportGenerator" StartIcon="@Icons.Material.Filled.Assessment">
                Generează rapoarte
            </MudButton>
        </MudStack>
        <MudStack Row Spacing="2" Class="mb-4 flex-wrap">
            <MudButton Variant="Variant.Outlined" Color="Color.Primary" Size="Size.Large" Style="min-width: 280px;" OnClick="GoToMyAnnouncements" StartIcon="@Icons.Material.Filled.Notes">
                Anunțurile mele
            </MudButton>
        </MudStack>
        <MudStack Row Spacing="2" Class="mb-4 flex-wrap">
            <MudButton Variant="Variant.Outlined" Color="Color.Primary" Size="Size.Large" Style="min-width: 280px;" OnClick="GoToTransactionChartsBarForTwoPeriods" StartIcon="@Icons.Material.Filled.BarChart">
                Chart Bar – Distribuție pe Tranzacții
            </MudButton>
            </MudStack>
        <MudStack Row Spacing="2" Class="mb-4 flex-wrap">
            <MudButton Variant="Variant.Outlined" Color="Color.Primary" Size="Size.Large" Style="min-width: 280px;" OnClick="GoToTransactionChartsPieTransactionType" StartIcon="@Icons.Material.Filled.PieChart">
                Chart Pie – Distribuție pe Tipuri de Tranzacții
            </MudButton>
        </MudStack>
        <MudStack Row Spacing="2" Class="mb-4 flex-wrap">
            <MudButton Variant="Variant.Outlined" Color="Color.Primary" Size="Size.Large" Style="min-width: 280px;" OnClick="GoToTransactionChartsDonutTransactionPerAgent" StartIcon="@Icons.Material.Filled.DonutLarge">
                Chart Donut – Distribuție Tranzacții-Agent
            </MudButton>
        </MudStack>
    </Authorized>
</AuthorizeView>


@code{

    private List<AnnouncementResponseModel> announcements;
    private List<AnnouncementResponseModel> favouriteAnnouncements;
    private int userId;

    protected override async Task OnInitializedAsync()
    {
        userId = await LocalStorage.GetItemAsync<int>("userId");
    }

    private void GoToProfile()
    {
        Navigation.NavigateTo("/myProfileCustomerPage");
    }

    public async Task GetFavouriteAnnouncementsAsync()
    {
        favouriteAnnouncements = await Http.GetFromJsonAsync<List<AnnouncementResponseModel>>($"/users/{userId}/favorites");

        userFavouriteAnnouncements.FavouriteAnnouncements = favouriteAnnouncements;

        Navigation.NavigateTo("/favouriteAnnouncements");
    }

    public async Task UploadDocuments() => Navigation.NavigateTo("/uploadDocuments");
    public async Task GoToRaportGenerator() => Navigation.NavigateTo("/rapoarte");
    public async Task GoToMyAnnouncements() => Navigation.NavigateTo("/my-announcements");
    public async Task GoToDashboard() => Navigation.NavigateTo("/dashboard-tranzactii");
    public async Task GoToTransactionChartsBarForTwoPeriods() => Navigation.NavigateTo("/charts");
    public async Task GoToTransactionChartsPieTransactionType() => Navigation.NavigateTo("/grafic-tip-tranzactie");
    public async Task GoToTransactionChartsDonutTransactionPerAgent() => Navigation.NavigateTo("/grafic-tranzactii-per-agent");
}