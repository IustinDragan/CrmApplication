@page "/"
@using System.Text
@using Blazored.LocalStorage
@using CRMRealEstate.UI.Models
@using Microsoft.AspNetCore.Components.Authorization
@using MudBlazor
@using RealEstate.Web
@inject UserFavouriteAnnouncements userFavouriteAnnouncements
@inject NavigationManager Navigation
@inject HttpClient Http
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject ILocalStorageService LocalStorage

<div class="home-wrapper">
    <h1 class="hero-title">Bine ai venit la CRM Real Estate</h1>
    <p class="hero-sub">Administrează-ți anunțurile și proprietățile imobiliare cu ușurință.</p>

    @if (isAuthResolved)
    {
        <AuthorizeView>
            <Authorized Context="authState">
                <h4>Bine ai revenit!</h4>

                <p>Iată câteva acțiuni rapide pe care le poți face astăzi:</p>
            </Authorized>
            <NotAuthorized>
                <h4>De ce să alegi CRM Real Estate?</h4>
                <ul>
                    <li>✔ Publică rapid anunțuri imobiliare</li>
                    <li>✔ Contact direct cu agenții tăi</li>
                    <li>✔ Istoric, rapoarte și anunțuri favorite</li>
                    <li>✔ Interfață modernă, intuitivă</li>
                </ul>
                <br/>
                <a class="btn btn-primary" href="/register">Creează cont</a>
                <a class="btn btn-outline-secondary" href="/login">Am deja cont</a>
                <br />
            </NotAuthorized>
        </AuthorizeView>
    }
    else
    {
        <MudProgressCircular Color="Color.Primary" Indeterminate="true" Size="Size.Large" Class="my-4 mx-auto d-block" />
    }
    <br />
    <div class="search-wrapper">
        <input type="text" placeholder="Caută..." @bind="searchText" @bind:event="oninput" />
        <button @onclick="Search">Caută</button>
        <input type="number" placeholder="Minim" @bind="minPrice" @bind:event="oninput" />
        <input type="number" placeholder="Maxim" @bind="maxPrice" @bind:event="oninput" />
        <button @onclick="FilterPrice">Caută</button>
    </div>

    <div class="dashboard-cards">
        <div class="dashboard-card">
            <div class="card-icon">
                <i class="bi bi-whatsapp"></i>
            </div>
            <AuthorizeView Roles="Customer">
                <Authorized>
                    <h5>Contacteaza un agent</h5>
                    <p>Ia legatura cu unul dintre agentii nostri</p>
                    <a class="btn btn-outline-primary" href="/send-request">Contacteaza un agent</a>
                </Authorized>
            </AuthorizeView>

            <AuthorizeView Roles="SalesAgent">
                <Authorized>
                    <h5>Solicitari clienti</h5>
                    <p>Acceseaza solicitari active din partea clientilor</p>
                    <a class="btn btn-outline-primary" href="/agent-requests">Vezi solicitarile clientilor</a>
                </Authorized>
            </AuthorizeView>

            <AuthorizeView>
                <NotAuthorized>
                    <h5>Contacteaza un agent</h5>
                    <p>Pentru a putea contacta un agent trebuie sa te logezi</p>
                    <a class="btn btn-outline-primary" href="/login">Intra in contul tau</a>
                </NotAuthorized>
            </AuthorizeView>
        </div>

        <div class="dashboard-card">
            <div class="card-icon">
                <i class="bi bi-building"></i>
            </div>
            <h5>Anunțuri</h5>
            <p>Publică anunțuri noi sau editează-le pe cele existente.</p>
            <a class="btn btn-outline-primary" href="/announcements">Gestionare Anunțuri</a>
        </div>

        <AuthorizeView Roles="Customer">
            <Authorized>
                <div class="dashboard-card">
                    <div class="card-icon">
                        <i class="bi bi-building-down"></i>
                    </div>
                    <h5>Anunțuri care ți-ar putea plăcea</h5>
                    <p>Explorează proprietăți similare cu cele salvate de tine.</p>
                    <button class="btn btn-outline-primary" @onclick="GoToAnnouncementsAsync">Vezi sugestiile</button>
                </div>

                <div class="dashboard-card">
                    <div class="card-icon">
                        <i class="bi bi-building-down"></i>
                    </div>
                    <h5>Favoritele mele</h5>
                    <p>Vezi cele mai recente anunțuri pe care le-ai salvat.</p>
                    <button class="btn btn-outline-primary" @onclick="GetFavouriteAnnouncementsAsync">Accesează favorite</button>
                </div>

                <div class="dashboard-card">
                    <div class="card-icon">
                        <i class="bi bi-question-circle"></i>
                    </div>
                    <h5>Ai nevoie de ajutor?</h5>
                    <p>Trimite o solicitare și te vom contacta în cel mai scurt timp.</p>
                    <button class="btn btn-outline-primary" @onclick="GoToCustomerRequests">Trimite solicitare</button>
                </div>

                <div class="dashboard-card">
                    <div class="card-icon">
                        <i class="bi bi-person"></i>
                    </div>
                    <h5>Profilul Meu</h5>
                    <p>Actualizează datele contului tău și informațiile personale.</p>
                    <button class="btn btn-outline-primary" @onclick="GoToProfile">Profilul Meu</button>
                </div>
            </Authorized>
        </AuthorizeView>

        <AuthorizeView Roles="SalesAgent">
            <Authorized>
                <div class="dashboard-card">
                    <div class="card-icon">
                        <i class="bi bi-building-down"></i>
                    </div>
                    <h5>Anunturile mele</h5>
                    <p>Vezi toate anunțurile publicate de tine.</p>
                    <button class="btn btn-outline-primary" @onclick="GoToAgentAnnouncements">Vezi anunțurile</button>
                </div>

                <div class="dashboard-card">
                    <div class="card-icon">
                        <i class="bi bi-inbox"></i>
                    </div>
                    <h5>Solicitări recente de la clienți</h5>
                    <p>Răspunde rapid solicitărilor venite recent.</p>
                    <button class="btn btn-outline-primary" @onclick="GoToAgentReceivedRequests">Accesează solicitările</button>
                </div>

                <div class="dashboard-card">
                    <div class="card-icon">
                        <i class="bi bi-file-medical"></i>
                    </div>
                    <h5>Generează un raport</h5>
                    <p>Urmărește evoluția vânzărilor tale.</p>
                    <button class="btn btn-outline-primary" @onclick="GoToReports">Generează raport</button>
                </div>

                <div class="dashboard-card">
                    <div class="card-icon">
                        <i class="bi bi-building-down"></i>
                    </div>
                    <h5>Tranzactii finalizate</h5>
                    <p>Vezi toate tranzactiile publicate de tine.</p>
                    <button class="btn btn-outline-primary" @onclick="GoToMySoldAnnouncements">Vezi anunțurile</button>
                </div>

                <div class="dashboard-card">
                    <div class="card-icon">
                        <i class="bi bi-person"></i>
                    </div>
                    <h5>Profilul Meu</h5>
                    <p>Actualizează datele contului tău și informațiile personale.</p>
                    <button class="btn btn-outline-primary" @onclick="GoToProfile">Profilul Meu</button>
                </div>

            </Authorized>
        </AuthorizeView>

        <AuthorizeView Roles="Admin">
            <Authorized>
                <div class="dashboard-card">
                    <h5>Statistici generale</h5>
                    <p>Vizualizează date agregate despre activitatea platformei.</p>
                    <button class="btn btn-outline-secondary">Vezi statistici</button>
                </div>

                <div class="dashboard-card">
                    <h5>Gestionează utilizatori</h5>
                    <p>Adaugă, editează sau suspendă conturi din sistem.</p>
                    <button class="btn btn-outline-secondary">Panou administrare</button>
                </div>

                <div class="dashboard-card">
                    <h5>Tranzacții recente</h5>
                    <p>Monitorizează cele mai recente vânzări sau închirieri.</p>
                    <button class="btn btn-outline-secondary">Vezi tranzacțiile</button>
                </div>

                <div class="dashboard-card">
                    <div class="card-icon">
                        <i class="bi bi-person"></i>
                    </div>
                    <h5>Profilul Meu</h5>
                    <p>Actualizează datele contului tău și informațiile personale.</p>
                    <button class="btn btn-outline-primary" @onclick="GoToProfile">Profilul Meu</button>
                </div>
            </Authorized>
        </AuthorizeView>
    </div>
</div>

@code {
    private readonly string startDate = string.Empty;
    private List<AnnouncementResponseModel> announcements;
    private string searchText = string.Empty;
    private string queryString = string.Empty;
    private string queryStringForPrice = string.Empty;
    private double? priceFilter;

    private double? minPrice;
    private double? maxPrice;

    private int userId;
    private bool isAuthResolved = false;

    private string greeting = "";

    private List<AnnouncementResponseModel> favouriteAnnouncements;

    private async Task Search()
    {
        queryString = BuildQueryString(searchText);
        var apiUrl = queryString;

        announcements = await Http.GetFromJsonAsync<List<AnnouncementResponseModel>>(apiUrl);
    }

    private async Task FilterPrice()
    {
        queryStringForPrice = BuildQueryStringForPrice(minPrice, maxPrice);
        var apiUrl = queryStringForPrice;

        announcements = await Http.GetFromJsonAsync<List<AnnouncementResponseModel>>(apiUrl);
    }

    private string BuildQueryString(string searchText)
    {
        var queryBuilder = new StringBuilder("announcement?");

        if (!string.IsNullOrEmpty(startDate))
        {
            queryBuilder.Append($"startDate={startDate}&");
        }

        if (!string.IsNullOrEmpty(searchText))
        {
            queryBuilder.Append($"searchText={searchText}&");
        }

        if (queryBuilder.Length > 0)
        {
            queryBuilder.Length--;
        }

        return queryBuilder.ToString();
    }

    private string BuildQueryStringForPrice(double? minPrice, double? maxPrice)
    {
        var queryBuilder = new StringBuilder("announcement?");

        if (minPrice.HasValue)
        {
            queryBuilder.Append($"price={minPrice}&");
        }

        if (maxPrice.HasValue)
        {
            queryBuilder.Append($"maxValue={maxPrice}&");
        }

        if (queryBuilder.Length > 0)
        {
            queryBuilder.Length--;
        }

        return queryBuilder.ToString();
    }

    private void GoToProfile()
    {
        Navigation.NavigateTo("/myProfileCustomerPage");
    }    

    private void GoToAgentAnnouncements()
    {
        Navigation.NavigateTo("/my-announcements");
    }     
    
    private void GoToMySoldAnnouncements()
    {
        Navigation.NavigateTo("/my-sold-announcements");
    }    

    private void GoToAgentReceivedRequests()
    {
        Navigation.NavigateTo("/agent-requests");
    }      
    
    private void GoToAnnouncementsAsync()
    {
        Navigation.NavigateTo("/announcements");
    }     

    private void GoToCustomerRequests()
    {
        Navigation.NavigateTo("/send-request");
    }    

    private void GoToReports()
    {
        Navigation.NavigateTo("/rapoarte");
    }    

    public async Task GetFavouriteAnnouncementsAsync()
    {
        favouriteAnnouncements = await Http.GetFromJsonAsync<List<AnnouncementResponseModel>>($"/users/{userId}/favorites");
        userFavouriteAnnouncements.FavouriteAnnouncements = favouriteAnnouncements;
        Navigation.NavigateTo("/favouriteAnnouncements");
    }

    protected override async Task OnInitializedAsync()
    {
        userId = await LocalStorage.GetItemAsync<int>("userId");

        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        isAuthResolved = true;
    }
}